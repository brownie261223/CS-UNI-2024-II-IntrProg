#include <iostream>
#include <vector>
#include <string>
#include <type_traits>
using namespace std;

// Función base para el caso recursivo (terminación de la recursión)
void mostrar_datos() {}

// Función plantilla que maneja múltiples argumentos de cualquier tipo indefinidamente
template <typename T, typename... Args>
void mostrar_datos(T arg, Args... args) {
    cout<<arg<<endl;  // Imprime el primer argumento
    mostrar_datos(args...);  // Llama recursivamente para los siguientes argumentos
}

// Función para capturar la entrada de diferentes tipos y mostrarla
template <typename T>
void ingresar_y_mostrar(vector<T> &datos) {
    for (const auto &dato : datos) {
        cout<<dato<<endl;
    }
}

int main(){
    vector<string> datos;
    // Leemos datos indefinidos del usuario hasta que se ingrese "fin"
    string entrada;
    cout<< "Ingresa todos tus datos (escribe 'fin' para terminar la lista):\n";
    while(true){
        getline(cin, entrada);
        if(entrada == "fin") {
            break;
        }
        datos.push_back(entrada);
    }
    // Mostramos los datos ingresados
    cout << "\nDatos ingresados:\n";
    ingresar_y_mostrar(datos);
    return 0;
}
